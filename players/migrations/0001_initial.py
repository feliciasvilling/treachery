# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2017-03-13 17:26
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('willpower', models.BooleanField(default=False, help_text='Do you want to spend a point of willpower for an automatic succses?')),
                ('description', models.TextField(blank=True)),
                ('resolved', models.CharField(choices=[('UNRESOLVED', 'Unresolved'), ('PENDING', 'Pending'), ('RESOLVED', 'Resolved')], default='UNRESOLVED', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ActionOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ActionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('template', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActiveDisciplines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Age',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('action_options', models.ManyToManyField(blank=True, to='players.ActionOption')),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AttributeRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learned', models.BooleanField(default=False)),
                ('elder_blood', models.BooleanField(default=False)),
                ('mentor', models.BooleanField(default=False)),
                ('value', models.PositiveIntegerField(default=1)),
                ('exp', models.PositiveIntegerField(default=0)),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Attribute')),
            ],
        ),
        migrations.CreateModel(
            name='Boon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('trivial', 'trivial'), ('liten', 'liten'), ('enkel', 'enkel'), ('stor', 'stor'), ('livs', 'livs')], default='enkel', max_length=10)),
                ('number', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='CanonFact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('generation', models.PositiveIntegerField(default=13)),
                ('open_goal1', models.TextField(blank=True)),
                ('open_goal2', models.TextField(blank=True)),
                ('hidden_goal', models.TextField(blank=True)),
                ('humanity', models.PositiveIntegerField(default=7)),
                ('willpower', models.PositiveIntegerField(default=0)),
                ('blood', models.PositiveIntegerField(default=10)),
                ('health', models.PositiveIntegerField(default=0)),
                ('resources', models.PositiveIntegerField(default=0)),
                ('frenzyTriggers', models.TextField(blank=True)),
                ('concept', models.TextField(blank=True)),
                ('herd', models.PositiveIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)], default=0)),
                ('haven', models.PositiveIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)], default=0)),
                ('exp', models.PositiveIntegerField(default=0)),
                ('humanity_exp', models.PositiveIntegerField(default=0)),
                ('special_exp', models.PositiveIntegerField(default=0)),
                ('additional_notes', models.TextField(blank=True)),
                ('age', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Age')),
                ('attributes', models.ManyToManyField(blank=True, to='players.AttributeRating')),
                ('boons', models.ManyToManyField(blank=True, to='players.Boon')),
                ('canon_fact', models.ManyToManyField(blank=True, to='players.CanonFact')),
            ],
        ),
        migrations.CreateModel(
            name='Clan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('theme', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DisciplineRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(default=1)),
                ('learned', models.BooleanField(default=False)),
                ('elder_blood', models.BooleanField(default=False)),
                ('in_clan', models.BooleanField(default=False)),
                ('mentor', models.BooleanField(default=False)),
                ('exp', models.PositiveIntegerField(default=0)),
                ('discipline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Discipline')),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('feeding_capacity', models.PositiveIntegerField()),
                ('status', models.CharField(max_length=200)),
                ('influence', models.CharField(max_length=200)),
                ('masquerade', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ElderPower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ExtraAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('action_options', models.ManyToManyField(to='players.ActionOption')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='players.Character')),
            ],
        ),
        migrations.CreateModel(
            name='Feeding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feeding_points', models.PositiveIntegerField(help_text='How many feeding points do you want to take from this domain?')),
                ('description', models.TextField(help_text='Describe how go about feeding.')),
                ('resolved', models.CharField(choices=[('UNRESOLVED', 'Unresolved'), ('PENDING', 'Pending'), ('RESOLVED', 'Resolved')], default='UNRESOLVED', max_length=10)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Character')),
                ('discipline', models.ForeignKey(blank=True, help_text='What discipline (if any) do you use to feed?', null=True, on_delete=django.db.models.deletion.CASCADE, to='players.DisciplineRating')),
                ('domain', models.ForeignKey(help_text='Where do you want to feed?', on_delete=django.db.models.deletion.CASCADE, to='players.Domain')),
            ],
        ),
        migrations.CreateModel(
            name='Ghoul',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('level', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3)], default=1)),
                ('disciplines', models.ManyToManyField(blank=True, to='players.DisciplineRating')),
            ],
        ),
        migrations.CreateModel(
            name='Hook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='HookAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Influence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='InfluencePriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('cost', models.PositiveIntegerField()),
                ('influence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Influence')),
            ],
        ),
        migrations.CreateModel(
            name='InfluenceRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField()),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='influences', to='players.Character')),
                ('influence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Influence')),
            ],
        ),
        migrations.CreateModel(
            name='Nature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PoliticalFaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Population',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complicated', models.BooleanField()),
                ('description', models.TextField()),
                ('blood_bond', models.PositiveIntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)], default=0)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationship', to='players.Character')),
            ],
        ),
        migrations.CreateModel(
            name='ResourcePriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('cost', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Ritual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('level', models.PositiveIntegerField(default=1)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RitualRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp', models.BooleanField(default=False)),
                ('invested', models.PositiveIntegerField(default=0)),
                ('ritual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Ritual')),
            ],
        ),
        migrations.CreateModel(
            name='Rumor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('gm_note', models.TextField(blank=True)),
                ('rumor_type', models.CharField(choices=[('Unreliable', 'Unreliable'), ('Reliable', 'Reliable'), ('Fact', 'Fact'), ('Vampire', 'Vampire')], default='Unreliable', max_length=15)),
                ('canonFact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.CanonFact')),
                ('influence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Influence')),
                ('recipients', models.ManyToManyField(blank=True, related_name='rumors', to='players.Character')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_open', models.BooleanField(default=True)),
                ('is_special', models.BooleanField(default=False)),
                ('action_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.ActionOption')),
                ('feeding_domains', models.ManyToManyField(blank=True, to='players.Domain')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('action_options', models.ManyToManyField(blank=True, to='players.ActionOption')),
            ],
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('mod', models.PositiveIntegerField()),
                ('damage_type', models.CharField(choices=[('bash', 'bash'), ('lethal', 'lethal'), ('aggrevated', 'aggrevated')], max_length=200)),
                ('resources', models.PositiveIntegerField()),
                ('ranged', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AidAction',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('name', models.CharField(blank=True, help_text='if the action is targeting a hook, you need to enter the name of the hook here.', max_length=200)),
                ('betrayal', models.BooleanField(default=False, help_text='Do you want to betray them rather than help them?')),
                ('action', models.ForeignKey(help_text='What kind of action you are helping them with', on_delete=django.db.models.deletion.CASCADE, to='players.ActionType')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='ConserveDomain',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='ConserveInfluence',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('influence', models.ForeignKey(help_text="Which of your influences are you trying to conserve? (Warning: Don't choose an influence where you have no hooks.)", on_delete=django.db.models.deletion.CASCADE, to='players.Influence')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InfluenceDestroy',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('name', models.CharField(help_text='What is the name of the hook you are trying to destroy?', max_length=200)),
                ('influence', models.ForeignKey(help_text='In what influence does the hook operate?', on_delete=django.db.models.deletion.CASCADE, to='players.Influence')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InfluenceForge',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('name', models.CharField(help_text='What is the name of the new hook?', max_length=200)),
                ('influence', models.ForeignKey(help_text='In what influence area do you want to create a new hook? (warning: you may not take this action unless you have performed a Investigate Influence actiona for the influence area before. If you want to create a new influence area contact the gamemasters directly.)', on_delete=django.db.models.deletion.CASCADE, to='players.Influence')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InfluenceSteal',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('name', models.CharField(help_text='What is the name of the hook you are trying to steal?', max_length=200)),
                ('influence', models.ForeignKey(help_text='In what influence does the hook operate?', on_delete=django.db.models.deletion.CASCADE, to='players.Influence')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestEquipment',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('name', models.CharField(help_text='What kind of equipment is it?', max_length=200)),
                ('specialization', models.ForeignKey(help_text='What specialization should it give as bonus?', on_delete=django.db.models.deletion.CASCADE, to='players.Specialization')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestGhoul',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('name', models.CharField(help_text='What is the name of the ghoul you want to create, or improve?', max_length=200)),
                ('discipline', models.ForeignKey(help_text='What discipline should the ghoul gain a level in?', on_delete=django.db.models.deletion.CASCADE, to='players.Discipline')),
                ('specialization', models.ForeignKey(help_text='What specialization should the ghould gain?', on_delete=django.db.models.deletion.CASCADE, to='players.Specialization')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestHaven',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestHerd',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestigateCharacterDowntimeActions',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestigateCharacterInfluence',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('hooks', models.TextField(blank=True)),
                ('priority1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority1', to='players.InfluencePriority')),
                ('priority2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority2', to='players.InfluencePriority')),
                ('priority3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority3', to='players.InfluencePriority')),
                ('priority4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority4', to='players.InfluencePriority')),
                ('priority5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority5', to='players.InfluencePriority')),
                ('priority6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority6', to='players.InfluencePriority')),
                ('priority7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority7', to='players.InfluencePriority')),
                ('priority8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority8', to='players.InfluencePriority')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestigateCharacterResources',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('priority1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority1', to='players.ResourcePriority')),
                ('priority2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority2', to='players.ResourcePriority')),
                ('priority3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority3', to='players.ResourcePriority')),
                ('priority4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority4', to='players.ResourcePriority')),
                ('priority5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority5', to='players.ResourcePriority')),
                ('priority6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority6', to='players.ResourcePriority')),
                ('priority7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority7', to='players.ResourcePriority')),
                ('priority8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='priority8', to='players.ResourcePriority')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestigateCounterSpionage',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestigateInfluence',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('influence', models.ForeignKey(help_text='What influence area are you interested in?', on_delete=django.db.models.deletion.CASCADE, to='players.Influence')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestigatePhenomenon',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('phenonemon', models.TextField(help_text='Describe what you want to learn. The more detailed you are the more detailed the information you get will be.')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='InvestWeapon',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('weapon', models.ForeignKey(help_text='What weapon do you want to acqire?', on_delete=django.db.models.deletion.CASCADE, to='players.Weapon')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='KeepersQuestion',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('question', models.TextField()),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='LearnAttribute',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('attribute', models.ForeignKey(help_text='What attribute do you want to improve?', on_delete=django.db.models.deletion.CASCADE, to='players.Attribute')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='LearnDiscipline',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('discipline', models.ForeignKey(help_text='What Discipline do you want to improve?', on_delete=django.db.models.deletion.CASCADE, to='players.Discipline')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='LearnSpecialization',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('new_specialization', models.ForeignKey(help_text='Which specialization do want to gain?', on_delete=django.db.models.deletion.CASCADE, related_name='learner', to='players.Specialization')),
                ('old_specialization', models.ForeignKey(help_text='Which specialization are you willing to give up?', on_delete=django.db.models.deletion.CASCADE, related_name='forgeter', to='players.Specialization')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='MentorAttribute',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('attribute', models.ForeignKey(help_text='What attribute do you want to help your student improve?', on_delete=django.db.models.deletion.CASCADE, to='players.Attribute')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='MentorDiscipline',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('discipline', models.ForeignKey(help_text='What discipline do you want to help your student improve?', on_delete=django.db.models.deletion.CASCADE, to='players.Discipline')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='MentorSpecialization',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('specialization', models.ForeignKey(help_text='What specialization do you want to help your student acquire?', on_delete=django.db.models.deletion.CASCADE, to='players.Specialization')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='NeglectDomain',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='PatrolDomain',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='PrimogensAidAction',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('name', models.CharField(blank=True, help_text='if the action is targeting a hook, you need to enter the name of the hook here.', max_length=200)),
                ('betrayal', models.BooleanField(default=False, help_text='Do you want to betray rather than help?')),
                ('action', models.ForeignKey(help_text='What kind of action you are helping them with', on_delete=django.db.models.deletion.CASCADE, to='players.ActionType')),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='PrimogensQuestion',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
                ('question', models.TextField()),
            ],
            bases=('players.action',),
        ),
        migrations.CreateModel(
            name='Rest',
            fields=[
                ('action_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='players.Action')),
            ],
            bases=('players.action',),
        ),
        migrations.AddField(
            model_name='rumor',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rumors', to='players.Session'),
        ),
        migrations.AddField(
            model_name='hook',
            name='attributes',
            field=models.ManyToManyField(blank=True, to='players.HookAttribute'),
        ),
        migrations.AddField(
            model_name='hook',
            name='influence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Influence'),
        ),
        migrations.AddField(
            model_name='ghoul',
            name='hook',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Hook'),
        ),
        migrations.AddField(
            model_name='ghoul',
            name='specializations',
            field=models.ManyToManyField(blank=True, to='players.Specialization'),
        ),
        migrations.AddField(
            model_name='feeding',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedings', to='players.Session'),
        ),
        migrations.AddField(
            model_name='extraaction',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='players.Session'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='specialization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Specialization'),
        ),
        migrations.AddField(
            model_name='domain',
            name='population',
            field=models.ManyToManyField(blank=True, to='players.Population'),
        ),
        migrations.AddField(
            model_name='disciplinerating',
            name='elder_powers',
            field=models.ManyToManyField(blank=True, to='players.ElderPower'),
        ),
        migrations.AddField(
            model_name='clan',
            name='clan_disciplines',
            field=models.ManyToManyField(blank=True, to='players.Discipline'),
        ),
        migrations.AddField(
            model_name='character',
            name='clan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Clan'),
        ),
        migrations.AddField(
            model_name='character',
            name='demeanor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='players.Nature'),
        ),
        migrations.AddField(
            model_name='character',
            name='disciplines',
            field=models.ManyToManyField(blank=True, to='players.DisciplineRating'),
        ),
        migrations.AddField(
            model_name='character',
            name='equipment',
            field=models.ManyToManyField(blank=True, to='players.Equipment'),
        ),
        migrations.AddField(
            model_name='character',
            name='ghouls',
            field=models.ManyToManyField(blank=True, to='players.Ghoul'),
        ),
        migrations.AddField(
            model_name='character',
            name='hooks',
            field=models.ManyToManyField(blank=True, related_name='master', to='players.Hook'),
        ),
        migrations.AddField(
            model_name='character',
            name='nature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='players.Nature'),
        ),
        migrations.AddField(
            model_name='character',
            name='political_faction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.PoliticalFaction'),
        ),
        migrations.AddField(
            model_name='character',
            name='relationships',
            field=models.ManyToManyField(blank=True, related_name='master', to='players.Relationship'),
        ),
        migrations.AddField(
            model_name='character',
            name='rituals',
            field=models.ManyToManyField(blank=True, to='players.RitualRating'),
        ),
        migrations.AddField(
            model_name='character',
            name='sire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Character'),
        ),
        migrations.AddField(
            model_name='character',
            name='specializations',
            field=models.ManyToManyField(blank=True, to='players.Specialization'),
        ),
        migrations.AddField(
            model_name='character',
            name='titles',
            field=models.ManyToManyField(blank=True, to='players.Title'),
        ),
        migrations.AddField(
            model_name='character',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='character', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='character',
            name='weapons',
            field=models.ManyToManyField(blank=True, to='players.Weapon'),
        ),
        migrations.AddField(
            model_name='boon',
            name='signer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Character'),
        ),
        migrations.AddField(
            model_name='activedisciplines',
            name='character',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Character'),
        ),
        migrations.AddField(
            model_name='activedisciplines',
            name='disciplines',
            field=models.ManyToManyField(blank=True, help_text='Which disciplines do you want to use during the downtime? (Hold down Ctrl to select multiple choices.)', to='players.DisciplineRating'),
        ),
        migrations.AddField(
            model_name='activedisciplines',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_disciplines', to='players.Session'),
        ),
        migrations.AddField(
            model_name='actionoption',
            name='action_types',
            field=models.ManyToManyField(to='players.ActionType'),
        ),
        migrations.AddField(
            model_name='action',
            name='action_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.ActionType'),
        ),
        migrations.AddField(
            model_name='action',
            name='character',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Character'),
        ),
        migrations.AddField(
            model_name='action',
            name='helpers',
            field=models.ManyToManyField(blank=True, help_text='People who you excpect help from on this action. (warning: they might betray you.) (Hold down Ctrl to select multiple choices.)', related_name='allowedHelp', to='players.Character'),
        ),
        migrations.AddField(
            model_name='action',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='players.Session'),
        ),
        migrations.AddField(
            model_name='primogensquestion',
            name='target',
            field=models.ForeignKey(help_text='Who do you want to question? (You may only choose members of your own clan.)', on_delete=django.db.models.deletion.CASCADE, to='players.Character'),
        ),
        migrations.AddField(
            model_name='primogensaidaction',
            name='helpee',
            field=models.ForeignKey(help_text='Who do you want to help? (You may only choose members of your own clan.)', on_delete=django.db.models.deletion.CASCADE, related_name='primogen_help', to='players.Character'),
        ),
        migrations.AddField(
            model_name='patroldomain',
            name='domain',
            field=models.ForeignKey(help_text='Which domain do want to get one less problem?', on_delete=django.db.models.deletion.CASCADE, to='players.Domain'),
        ),
        migrations.AddField(
            model_name='neglectdomain',
            name='domain',
            field=models.ForeignKey(help_text='Which domain do want to get an additional problem?', on_delete=django.db.models.deletion.CASCADE, to='players.Domain'),
        ),
        migrations.AddField(
            model_name='mentorspecialization',
            name='student',
            field=models.ForeignKey(help_text='Who do you want to mentor?', on_delete=django.db.models.deletion.CASCADE, related_name='specialization_teacher', to='players.Character'),
        ),
        migrations.AddField(
            model_name='mentordiscipline',
            name='student',
            field=models.ForeignKey(help_text='Who do you want to mentor?', on_delete=django.db.models.deletion.CASCADE, related_name='discipline_teacher', to='players.Character'),
        ),
        migrations.AddField(
            model_name='mentorattribute',
            name='student',
            field=models.ForeignKey(help_text='Who do you want to mentor?', on_delete=django.db.models.deletion.CASCADE, related_name='attribute_teacher', to='players.Character'),
        ),
        migrations.AddField(
            model_name='learnspecialization',
            name='trainer',
            field=models.ForeignKey(blank=True, help_text='Do you have anyone to train you? If so, who?', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SpecializationTrainee', to='players.Character'),
        ),
        migrations.AddField(
            model_name='learndiscipline',
            name='trainer',
            field=models.ForeignKey(blank=True, help_text='Do you have anyone to train you? If so, who?', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='DisciplineTrainee', to='players.Character'),
        ),
        migrations.AddField(
            model_name='learnattribute',
            name='trainer',
            field=models.ForeignKey(blank=True, help_text='Do you have anyone to train you? If so, who?', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AttributeTrainee', to='players.Character'),
        ),
        migrations.AddField(
            model_name='keepersquestion',
            name='target',
            field=models.ForeignKey(help_text='Who do you want to question?', on_delete=django.db.models.deletion.CASCADE, to='players.Character'),
        ),
        migrations.AddField(
            model_name='investigatecharacterresources',
            name='target',
            field=models.ForeignKey(help_text='Which character are you interested in?', on_delete=django.db.models.deletion.CASCADE, related_name='investigate_resources', to='players.Character'),
        ),
        migrations.AddField(
            model_name='investigatecharacterinfluence',
            name='target',
            field=models.ForeignKey(help_text='Which character are you interested in?', on_delete=django.db.models.deletion.CASCADE, related_name='investigate_influence', to='players.Character'),
        ),
        migrations.AddField(
            model_name='investigatecharacterdowntimeactions',
            name='target',
            field=models.ForeignKey(help_text='Which character are you interested in?', on_delete=django.db.models.deletion.CASCADE, related_name='investigate_downtime_actions', to='players.Character'),
        ),
        migrations.AddField(
            model_name='conservedomain',
            name='domain',
            field=models.ForeignKey(help_text='Which domain are you trying to conserve?', on_delete=django.db.models.deletion.CASCADE, to='players.Domain'),
        ),
        migrations.AddField(
            model_name='aidaction',
            name='helpee',
            field=models.ForeignKey(help_text='The person you are helping. (You are not allowed to chose your self.)', on_delete=django.db.models.deletion.CASCADE, related_name='help', to='players.Character'),
        ),
    ]
